git First steps:

git init

git add README.md

git commit -m "first commit"

git remote add origin https://github.com/ralitsavoronevska/modern-portfolio.git

git push -u origin master



What you'll need to have or install while creating this project:

/ HTML5, CSS3 (Grid template areas, Flex, transitions, etc.), SASS (mixins, etc.), Vanilla JS /
/ 

npm => Node SASS /



1. Text Editor - Brad recommends VSCode



2. NodeJS (Install the latest version) - JS runtime => npm => Node SASS



3. Git Bash => 

mkdir modern-portfolio


cd modern-portfolio


code . (Open current folder for VSCode) => VSCode

VSCode Extensions:

-Live Server

-Bracket Pair Colorizer

-Prettier - Code formatter (settings => "editor.formatOnSave": true, )



4. Create a new folder - dist

Here is the folder where html, compiled css, js, images, etc.



5. Create a new folder outside of the dist folder,
 called SCSS, where we'll work on our SASS workflow.
=> main.scss, where we'll put all of partials.scss-s



6. We need to install node SASS, which uses LIP SASS, 
which is the sea version of the preprocessor
=> for that we need to install npm first 



7. Before installing npm we need to create
something called package.json file,
which basically is like 
a mafifest for our project:


=> npm init (in the console, it will ask us some questions:



package name: modern-portfolio
version: (1.0.0): (yes===enter)


description: Responsive portfolio website
 

entry point (index.js) (yes===enter)


test command: (yes===enter)


git repository: (yes===enter)


keywords: (yes===enter) 
or 
HTML5, CSS3 (Grid template areas, Flex, transitions, etc.), SASS (mixins, etc.), Vanilla JS



author: Name Familyname
origin a

license: MIT
=> That creates a package.json file with some key-value pairs


From modern-portfolio folder in the console write:



npm i node-sass

=> it will create node_modules folder into the modern-portfolio folder

=> also creates a package-lock.json file

8. Node sass is installed, but we need to set it up to make it work



=> package.json file => 



change

"test": "\echo \"Error: no test specified\" && exit 1"



to

"sass": "\echo \"Hello from sass script\""



From modern-portfolio folder on the console, to run it, 
since it is a script (a child of that name-value property):



npm run sass



finilize to
"sass": "node-sass -w scss/ -o dist/css/ --recursive"


-w === watch
 
scss === folder we just created

-o === output

--recursive === for not to have issues with partials, having it not to auto reload



From modern-portfolio folder on the console, to run it, again:



npm run sass

9. Test the node sass by writing into the main.scss to see


example:


$primary-color: #444;



body {
    
  background: $primary-color;

}



if when saved that compiles properly into css into the 
created by the node sass, main.css file:

/do not touch the compiled css file/



body {
  
  background: #444; 

}



10. To include the created styles we need to include the compiled main.css file into our HTML

=> 
<link rel="stylesheet" href="css/main.css" />



10. Create a .gitignore file for the repository and then, a repository


In the .gitignore add node_modules



From modern-portfolio folder on the console write:


/right mouse btn, Git Bash here/


touch .gitignore 

=> add to the .gitignore file

/we don't want this into our Github repository/ 
node_modules



11. Create /initialize/ a repository on GitHub


From modern-portfolio folder on the console write:

/right mouse btn, Git Bash here/



git init



This creates a hidden folder called .git
and all of our repository stuff goes there.


To add everything that we've don e so far:



git add .




To do the firs commit:

/from modern-portfolio folder on the console write/


git commit -m 'Initial workflow set up'




Git may request:


git config --global user.email "you@example.com"

git config --global user.name "Your Name"




12. Commit after implementing/changing something


git add .

git commit -m ''




13. When ready with the project:



git remote add origin https://github.com/ralitsavoronevska/modern-portfolio.git
git push -u origin master


*13.1. Add --allow-unrelated-histories to solve the Git fatal error – 
“refusing to merge unrelated histories”

$ git pull origin master

From https://github.com/mkyong/java-concurrency
 * branch            master     -> FETCH_HEAD
 
fatal: refusing to merge unrelated histories

To fix it:

$ git pull origin master --allow-unrelated-histories


*13.2. Git refusing to merge unrelated histories. What is 'unrelated histories'?
https://stackoverflow.com/questions/45272492/git-refusing-to-merge-unrelated-histories-what-is-unrelated-histories

I think you have commit in remote repository and when you pull this error happen.
Use those commands:

git pull origin master --allow-unrelated-histories
git merge origin origin/master


14. Git Pages:

npm
npm i gh-pages



15. Go to the package.json file and after 
"main": "index.js",



write

"homepage": "http://user_name.github.io/modern-portfolio",



16. Write Deploy script
npm

after 

"sass": "node-sass -w scss/ -o dist/css/ --recursive",



write

"deploy": "gh-pages -d dist"



and then 
npm run deploy


If you just start a new repository, the history will be completely different than GitHub knows it.

Use

git clone <repo>
and just make commits on top of that. Then push.


- Mark

17. In case you messed up and want to reset origin to a specific commit:

git reset --hard <commit-hash> [Example: cedc856]
git push --force origin master
